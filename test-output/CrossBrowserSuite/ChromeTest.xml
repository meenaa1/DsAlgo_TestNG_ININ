<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LenovoRRB" failures="0" tests="123" name="ChromeTest" time="21.768" errors="0" timestamp="2025-04-07T14:18:44 CDT">
  <testcase classname="BaseClass.TestBase" name="@BeforeClass setUp" time="1.966">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: &amp;apos;LENOVORRB&amp;apos;, ip: &amp;apos;10.0.0.213&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: 'LENOVORRB', ip: '10.0.0.213'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at DriverFactory.driverFactory.initiateDriver(driverFactory.java:31)
at BaseClass.TestBase.setUp(TestBase.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.LinkedListTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="BaseClass.TestBase" name="@BeforeClass setUp" time="0.638">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: &amp;apos;LENOVORRB&amp;apos;, ip: &amp;apos;10.0.0.213&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: 'LENOVORRB', ip: '10.0.0.213'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at DriverFactory.driverFactory.initiateDriver(driverFactory.java:31)
at BaseClass.TestBase.setUp(TestBase.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.StackTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="BaseClass.TestBase" name="@BeforeClass setUp" time="0.667">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: &amp;apos;LENOVORRB&amp;apos;, ip: &amp;apos;10.0.0.213&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: 'LENOVORRB', ip: '10.0.0.213'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at DriverFactory.driverFactory.initiateDriver(driverFactory.java:31)
at BaseClass.TestBase.setUp(TestBase.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.QueueTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="BaseClass.TestBase" name="@BeforeClass setUp" time="0.84">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: &amp;apos;LENOVORRB&amp;apos;, ip: &amp;apos;10.0.0.213&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: 'LENOVORRB', ip: '10.0.0.213'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at DriverFactory.driverFactory.initiateDriver(driverFactory.java:31)
at BaseClass.TestBase.setUp(TestBase.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.TreeTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="BaseClass.TestBase" name="@BeforeClass setUp" time="0.769">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: &amp;apos;LENOVORRB&amp;apos;, ip: &amp;apos;10.0.0.213&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: cannot find Chrome binary 
Host info: host: 'LENOVORRB', ip: '10.0.0.213'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at DriverFactory.driverFactory.initiateDriver(driverFactory.java:31)
at BaseClass.TestBase.setUp(TestBase.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@BeforeMethod navigateToHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod navigateToHomePage -->
  <testcase classname="TestClasses.GraphTest" name="@BeforeMethod setupPages" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupPages -->
  <testcase classname="BaseClass.TestBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="TestClasses.DataStructureTest" name="dataStructureIntroduction" time="1.5"/>
  <testcase classname="TestClasses.DataStructureTest" name="checkPracticeQuestionsPage" time="0.564"/>
  <testcase classname="TestClasses.DataStructureTest" name="checkTimeComplexityLinkAndEmptyRun" time="1.603"/>
  <testcase classname="TestClasses.DataStructureTest" name="testInvalidPythonCode" time="1.417"/>
  <testcase classname="TestClasses.DataStructureTest" name="testValidPythonCode" time="1.587"/>
  <testcase classname="TestClasses.LinkedListTest" name="LinkedListFromGetStarted" time="0.0">
    <skipped/>
  </testcase> <!-- LinkedListFromGetStarted -->
  <testcase classname="TestClasses.LinkedListTest" name="LinkedListFromDropdown" time="0.0">
    <skipped/>
  </testcase> <!-- LinkedListFromDropdown -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingIntro" time="0.0">
    <skipped/>
  </testcase> <!-- checkingIntro -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.001">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_Intro" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Intro -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_Intro" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Intro -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_Intro" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_Intro -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_CreatingLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_CreatingLinkedList -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_CreatingLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_CreatingLinkedList -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_CreatingLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_CreatingLinkedList -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_TypesofLinkedlist" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_TypesofLinkedlist -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_TypesofLinkedlist" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_TypesofLinkedlist -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_TypesofLinkedlist" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_TypesofLinkedlist -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_ImplLinkedListInPython" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_ImplLinkedListInPython -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_ImplLinkedListInPython" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_ImplLinkedListInPython -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_ImplLinkedListInPython" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_ImplLinkedListInPython -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_Traversal" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Traversal -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_Traversal" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Traversal -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_Traversal" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_Traversal -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_Insertion" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Insertion -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_Insertion" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Insertion -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_Insertion" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_Insertion -->
  <testcase classname="TestClasses.LinkedListTest" name="testValidPythonCode_Deletion" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Deletion -->
  <testcase classname="TestClasses.LinkedListTest" name="testInvalidPythonCode_Deletion" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Deletion -->
  <testcase classname="TestClasses.LinkedListTest" name="emptyInput_Deletion" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput_Deletion -->
  <testcase classname="TestClasses.LinkedListTest" name="checkPracticeQuestions" time="0.0">
    <skipped/>
  </testcase> <!-- checkPracticeQuestions -->
  <testcase classname="TestClasses.StackTest" name="testLoginAndNavigateToStack" time="0.0">
    <skipped/>
  </testcase> <!-- testLoginAndNavigateToStack -->
  <testcase classname="TestClasses.StackTest" name="checkOperationInStack" time="0.0">
    <skipped/>
  </testcase> <!-- checkOperationInStack -->
  <testcase classname="TestClasses.StackTest" name="testInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode -->
  <testcase classname="TestClasses.StackTest" name="testValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode -->
  <testcase classname="TestClasses.StackTest" name="checkPracticeQns" time="0.0">
    <skipped/>
  </testcase> <!-- checkPracticeQns -->
  <testcase classname="TestClasses.StackTest" name="checkImplementation" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementation -->
  <testcase classname="TestClasses.StackTest" name="testImplementationInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationInvalidPythonCode -->
  <testcase classname="TestClasses.StackTest" name="testImplementationValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationValidPythonCode -->
  <testcase classname="TestClasses.StackTest" name="checkApplications" time="0.0">
    <skipped/>
  </testcase> <!-- checkApplications -->
  <testcase classname="TestClasses.StackTest" name="testApplicationsInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testApplicationsInvalidPythonCode -->
  <testcase classname="TestClasses.StackTest" name="testApplicationsValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testApplicationsValidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="testQueueGetStarted" time="0.0">
    <skipped/>
  </testcase> <!-- testQueueGetStarted -->
  <testcase classname="TestClasses.QueueTest" name="checkImplementationofQueueinPython" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationofQueueinPython -->
  <testcase classname="TestClasses.QueueTest" name="testInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="testValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="checkPracticeQns" time="0.0">
    <skipped/>
  </testcase> <!-- checkPracticeQns -->
  <testcase classname="TestClasses.QueueTest" name="checkImplementationUsingCollectionsDequeue" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationUsingCollectionsDequeue -->
  <testcase classname="TestClasses.QueueTest" name="testImplementationUsingCollectionsDequeueInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationUsingCollectionsDequeueInvalidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="testImplementationUsingCollectionsDequeueValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationUsingCollectionsDequeueValidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="checkImplementationusingarray" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationusingarray -->
  <testcase classname="TestClasses.QueueTest" name="testImplementationusingarrayInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationusingarrayInvalidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="testImplementationusingarrayValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testImplementationusingarrayValidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="checkQueueOperations" time="0.0">
    <skipped/>
  </testcase> <!-- checkQueueOperations -->
  <testcase classname="TestClasses.QueueTest" name="testQueueOperationsInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testQueueOperationsInvalidPythonCode -->
  <testcase classname="TestClasses.QueueTest" name="testQueueOperationsValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testQueueOperationsValidPythonCode -->
  <testcase classname="TestClasses.TreeTest" name="treeFromGetStarted" time="0.0">
    <skipped/>
  </testcase> <!-- treeFromGetStarted -->
  <testcase classname="TestClasses.TreeTest" name="treeFromDropdown" time="0.0">
    <skipped/>
  </testcase> <!-- treeFromDropdown -->
  <testcase classname="TestClasses.TreeTest" name="checkingOverviewOfTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkingOverviewOfTrees -->
  <testcase classname="TestClasses.TreeTest" name="checkingTerminologiesLink" time="0.0">
    <skipped/>
  </testcase> <!-- checkingTerminologiesLink -->
  <testcase classname="TestClasses.TreeTest" name="checkingTypesOfTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkingTypesOfTrees -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="checkingAllOtherLinks" time="0.0">
    <skipped/>
  </testcase> <!-- checkingAllOtherLinks -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_overviewofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_overviewofTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInput" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInput -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_Terminologies" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Terminologies -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_Terminologies" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Terminologies -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforTerminologies" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforTerminologies -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforTypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforTypesofTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_TypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_TypesofTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_TypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_TypesofTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforTreeTraversals -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_TreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_TreeTraversals -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_TreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_TreeTraversals -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforTraversals_Illust" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforTraversals_Illust -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_Traversals_Illust" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Traversals_Illust -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_Traversals_Illust" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Traversals_Illust -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_BinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_BinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_BinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_BinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforTypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforTypesofBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_TypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_TypesofBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_TypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_TypesofBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforImple_BinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforImple_BinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_Imple_BinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Imple_BinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_Imple_BinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Imple_BinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforImple_inpython" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforImple_inpython -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_Imple_inpython" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_Imple_inpython -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_Imple_inpython" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_Imple_inpython -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforBinaryTreeTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforBinaryTreeTraversal -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_BinaryTreeTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_BinaryTreeTraversal -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_BinaryTreeTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_BinaryTreeTraversal -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforApplOfBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforApplOfBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_ApplOfBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_ApplOfBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_ApplOfBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_ApplOfBinaryTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforBinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforBinarySearchTrees -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_BinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_BinarySearchTrees -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_BinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_BinarySearchTrees -->
  <testcase classname="TestClasses.TreeTest" name="emptyInputforImpleOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- emptyInputforImpleOfBST -->
  <testcase classname="TestClasses.TreeTest" name="testInvalidPythonCode_ImpleOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode_ImpleOfBST -->
  <testcase classname="TestClasses.TreeTest" name="testValidPythonCode_ImpleOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- testValidPythonCode_ImpleOfBST -->
  <testcase classname="TestClasses.TreeTest" name="checkPracticeQuestions" time="0.0">
    <skipped/>
  </testcase> <!-- checkPracticeQuestions -->
  <testcase classname="TestClasses.GraphTest" name="GraphFromGetStarted" time="0.0">
    <skipped/>
  </testcase> <!-- GraphFromGetStarted -->
  <testcase classname="TestClasses.GraphTest" name="GraphfromDropdown" time="0.0">
    <skipped/>
  </testcase> <!-- GraphfromDropdown -->
  <testcase classname="TestClasses.GraphTest" name="checkingGraphLink" time="0.0">
    <skipped/>
  </testcase> <!-- checkingGraphLink -->
  <testcase classname="TestClasses.GraphTest" name="checkingPracticeQnPage" time="0.0">
    <skipped/>
  </testcase> <!-- checkingPracticeQnPage -->
  <testcase classname="TestClasses.GraphTest" name="checkingGraphRepresentationLink" time="0.0">
    <skipped/>
  </testcase> <!-- checkingGraphRepresentationLink -->
  <testcase classname="TestClasses.GraphTest" name="testInvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPythonCode -->
  <testcase classname="TestClasses.GraphTest" name="testvalidPythonCode" time="0.0">
    <skipped/>
  </testcase> <!-- testvalidPythonCode -->
</testsuite> <!-- ChromeTest -->
